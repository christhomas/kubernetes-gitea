# -- Gitea should be installed in it's own namespace, so when it becomes a multi-container group, it'll be isolated
apiVersion: v1
kind: Namespace
metadata:
  name: gitea
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gitea
  namespace: gitea
  labels:
    app: gitea
data:
  RUN_MODE: "prod"
  APP_NAME: "Antimatter Studios Git Repository"
  INSTALL_LOCK: "true"
  ROOT_URL: "https://gitea.antimatter-studios.com"
  SSH_DOMAIN: "gitea.antimatter-studios.com"
  SSH_PORT: "10022"
  DISABLE_REGISTRATION: "true"
  REQUIRE_SIGNIN_VIEW: "true"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: gitea
  labels:
    app: gitea
data:
  DB_TYPE: "postgres"
  DB_HOST: "postgres.gitea:5432"
  DB_NAME: "gitea"
  DB_USER: "root"
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: drone
  namespace: gitea
  labels:
      app: gitea
data:
  DRONE_KUBERNETES_ENABLED: "true"
  DRONE_KUBERNETES_NAMESPACE: "gitea"
  DRONE_GITEA_SERVER: "https://gitea.antimatter-studios.com"
  DRONE_RPC_SECRET: "123098123098123098123"
  DRONE_SERVER_HOST: "gitea-drone.antimatter-studios.com"
  DRONE_SERVER_PROTO: "https"
  DRONE_GIT_ALWAYS_AUTH: "true"
  DRONE_GITEA_CLIENT_ID: "9fadde88-05f6-4bee-bffc-9ede16eab4cc"
  DRONE_GITEA_CLIENT_SECRET: "bOr_wcmiTEeE-CTTg1qU0np1el1fcZUqY_m0tSh2h2A="

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: registry
  namespace: gitea
  labels:
    app: gitea
data:
  REGISTRY_LOG_LEVEL: "info"
  REGISTRY_STORAGE_DELETE_ENABLED: "true"
  REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: "/registry"
  REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: "redis"
  REGISTRY_REDIS_ADDR: "redis.gitea:6379"
  # REGISTRY_AUTH_TOKEN_REALM: "https://gitea.antimatter-studios.com/jwt/auth"
  # REGISTRY_AUTH_TOKEN_SERVICE: "container_registry"
  # REGISTRY_AUTH_TOKEN_ISSUER: "gitea-issuer"
  # REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: "/registry/certs/registry.crt"
---

